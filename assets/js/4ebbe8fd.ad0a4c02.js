"use strict";(self.webpackChunkmdbw_atlas_operator=self.webpackChunkmdbw_atlas_operator||[]).push([[7532],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,k=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8577:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return d}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),l=["components"],i={sidebar_position:2},s="Deploy the backend",p={unversionedId:"deploy-to-k8s/deploy-backend",id:"deploy-to-k8s/deploy-backend",title:"Deploy the backend",description:"As we did with the containers, we will start with the backend. The deployment will create two replicas of our backend.",source:"@site/docs/deploy-to-k8s/2-deploy-backend.md",sourceDirName:"deploy-to-k8s",slug:"/deploy-to-k8s/deploy-backend",permalink:"/mern-k8s/docs/deploy-to-k8s/deploy-backend",draft:!1,editUrl:"https://github.com/joellord/mern-k8s/tree/main/docs/docs/deploy-to-k8s/2-deploy-backend.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"What is Kubernetes?",permalink:"/mern-k8s/docs/deploy-to-k8s/intro"},next:{title:"Create an ingress",permalink:"/mern-k8s/docs/deploy-to-k8s/create-ingress"}},c={},d=[{value:"Create your deployment",id:"create-your-deployment",level:2},{value:"Create your service",id:"create-your-service",level:2},{value:"Deploy the backend",id:"deploy-the-backend-1",level:2},{value:"Test the backend",id:"test-the-backend",level:2}],m={toc:d};function u(e){var t=e.components,i=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploy-the-backend"},"Deploy the backend"),(0,r.kt)("p",null,"As we did with the containers, we will start with the backend. The deployment will create two replicas of our backend."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Backend deployment",src:n(9990).Z+"#center",width:"994",height:"454"}),"\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("div",{align:"center"},"The backend on Kubernetes"))),(0,r.kt)("h2",{id:"create-your-deployment"},"Create your deployment"),(0,r.kt)("p",null,"First, let's start by creating a deployment. This deployment will describe the template for our pods, and tell Kubernetes how many of those pods we want."),(0,r.kt)("p",null,"In a new folder that will contain your Kubernetes definition files, add a new folder called ",(0,r.kt)("inlineCode",{parentName:"p"},"back"),". In this folder, create a file ",(0,r.kt)("inlineCode",{parentName:"p"},"deployment.yaml"),"."),(0,r.kt)("p",null,"All Kubernetes objects start with the same fields, which are ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"kind"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"spec"),". For this deployment, you can use the following."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mern-k8s-back\n  labels:\n    app: mern-k8s\n    component: back\nspec:\n")),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"spec"),", you can specify the number of replicas you want and the selector that will be used for Kubernetes to identify those replicas."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  replicas: 2\n  selector: \n    matchLabels:\n      component: back\n")),(0,r.kt)("p",null,"Finally, still in the ",(0,r.kt)("inlineCode",{parentName:"p"},"spec"),", you can specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"template")," to be used for these pods. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'  template:\n    metadata: \n      labels:\n        app: mern-k8s\n        component: back\n    spec:\n      containers:\n        - name: mern-k8s-back\n          image: $DOCKER_HUB_USERNAME/mern-k8s-back\n          ports: \n            - containerPort: 5000\n          env: \n            - name: PORT\n              value: "5000"\n            - name: CONN_STR\n              value: "$ATLAS_CONNECTION_STRING"\n')),(0,r.kt)("p",null,"Your final ",(0,r.kt)("inlineCode",{parentName:"p"},"back/deployment.yaml")," file should look like the following."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mern-k8s-back\n  labels:\n    app: mern-k8s\n    component: back\nspec:\n  replicas: 2\n  selector: \n    matchLabels:\n      component: back\n  template:\n    metadata: \n      labels:\n        app: mern-k8s\n        component: back\n    spec:\n      containers:\n        - name: mern-k8s-back\n          image: $DOCKER_HUB_USERNAME/mern-k8s-back\n          ports: \n            - containerPort: 5000\n          env: \n            - name: PORT\n              value: "5000"\n            - name: CONN_STR\n              value: "$ATLAS_CONNECTION_STRING"\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Don't forget to replace ",(0,r.kt)("inlineCode",{parentName:"p"},"$DOCKER_HUB_USERNAME")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"$ATLAS_CONNECTION_STRING")," with your own values, or use the following script to do it for you in bash."),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"envsubst < back/deployment.yaml > back/deployment.tmp.yaml && mv back/deployment.tmp.yaml back/deployment.yaml\n")))),(0,r.kt)("h2",{id:"create-your-service"},"Create your service"),(0,r.kt)("p",null,"The ReplicaSet created by this deployment will spin up two new pods with random names. In order for other services to be able to communicate with this backend, a Service will need to be created. This service will act as a load balancer for all the pods."),(0,r.kt)("p",null,"The service uses a similar syntax to the deployment. It has the ",(0,r.kt)("inlineCode",{parentName:"p"},"apiVersion"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"kind"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"spec")," fields. In the ",(0,r.kt)("inlineCode",{parentName:"p"},"spec"),", you will specify to which label will the requests be sent, and what the port mappings will look like. In this case, we want the service to run on port ",(0,r.kt)("inlineCode",{parentName:"p"},"80"),", but to redirect traffic to the port ",(0,r.kt)("inlineCode",{parentName:"p"},"5000")," in the backend container."),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"back/service.yaml")," file with the following content."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Service\nmetadata:\n  name: mern-k8s-back\n  labels:\n    app: mern-k8s\n    component: back\nspec:\n  selector:\n    component: back\n  ports:\n    - port: 80\n      targetPort: 5000\n      protocol: TCP\n      name: http\n")),(0,r.kt)("h2",{id:"deploy-the-backend-1"},"Deploy the backend"),(0,r.kt)("p",null,"Now that you have your deployment and service created, you can apply those files to your cluster. "),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you haven't started your Minikube instance yet, check out ",(0,r.kt)("a",{parentName:"p",href:"/docs/environment-setup/minikube"},"the environment setup")," page."))),(0,r.kt)("p",null,"Using ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl"),", you can apply those two new files to your Kubernetes cluster."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f ./back\n")),(0,r.kt)("p",null,"You can take a look at what you now have running in your cluster by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl get")," command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get all\n")),(0,r.kt)("p",null,"In there, you should see your new backend service, along with a replicaset, and a deployment. You should also see two pods. At the moment, they are more likely in a ContainerCreating status. This is because Kubernetes needs to pull the images to its local registry. As soon as the images are ready, the pods will start."),(0,r.kt)("h2",{id:"test-the-backend"},"Test the backend"),(0,r.kt)("p",null,"At the moment, you can't access the backend from the outside world. You will need an ingress to do so. However, you can look at the logs of your pods to make sure that everything is running smoothly."),(0,r.kt)("p",null,"Start by listing your pods."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods\n")),(0,r.kt)("p",null,"Now look at the logs for one of those pods by using the name of a pod that was just listed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs mern-k8s-back-39a83-19cde\n")))}u.isMDXComponent=!0},9990:function(e,t,n){t.Z=n.p+"assets/images/back-43cf9dd35879bbdb3257620462002920.png"}}]);