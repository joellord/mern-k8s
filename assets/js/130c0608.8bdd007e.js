"use strict";(self.webpackChunkmdbw_atlas_operator=self.webpackChunkmdbw_atlas_operator||[]).push([[8082],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(n),u=o,f=m["".concat(s,".").concat(u)]||m[u]||c[u]||a;return n?r.createElement(f,l(l({ref:t},d),{},{components:n})):r.createElement(f,l({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9437:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),l=["components"],i={sidebar_position:4},s="Deploy the frontend",p={unversionedId:"deploy-to-k8s/deploy-frontend",id:"deploy-to-k8s/deploy-frontend",title:"Deploy the frontend",description:"The process to deploy the frontend is very similar to the backend. The two setups being almost identical.",source:"@site/docs/deploy-to-k8s/4-deploy-frontend.md",sourceDirName:"deploy-to-k8s",slug:"/deploy-to-k8s/deploy-frontend",permalink:"/mern-k8s/docs/deploy-to-k8s/deploy-frontend",draft:!1,editUrl:"https://github.com/joellord/mern-k8s/tree/main/docs/docs/deploy-to-k8s/4-deploy-frontend.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create an ingress",permalink:"/mern-k8s/docs/deploy-to-k8s/create-ingress"},next:{title:"Set up the ingress for multiple services",permalink:"/mern-k8s/docs/deploy-to-k8s/setup-ingress"}},d={},c=[{value:"Create your deployemnt",id:"create-your-deployemnt",level:2},{value:"Create the service",id:"create-the-service",level:2},{value:"Apply the deployment and service",id:"apply-the-deployment-and-service",level:2}],m={toc:c};function u(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploy-the-frontend"},"Deploy the frontend"),(0,a.kt)("p",null,"The process to deploy the frontend is very similar to the backend. The two setups being almost identical."),(0,a.kt)("h2",{id:"create-your-deployemnt"},"Create your deployemnt"),(0,a.kt)("p",null,"The deployment definition for the frontend is almost the same as the backend one. The main differences being in the names, labels, and image name."),(0,a.kt)("p",null,"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"/front/deployment.yaml")," file, and add the following to it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mern-k8s-front\n  labels:\n    app: mern-k8s\n    component: front\nspec:\n  replicas: 2\n  selector: \n    matchLabels:\n      component: front\n  template:\n    metadata: \n      labels:\n        app: mern-k8s\n        component: front\n    spec:\n      containers:\n        - name: mern-k8s-front\n          image: $DOCKER_HUB_USERNAME/mern-k8s-front\n          ports: \n            - containerPort: 80\n          env: \n            - name: BASE_URL\n              value: "/api"\n')),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Don't forget to change ",(0,a.kt)("inlineCode",{parentName:"p"},"$DOCKER_HUB_USERNAME")," for your actual value, or use the following script to do it for you in bash."),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"envsubst < front/deployment.yaml > front/deployment.tmp.yaml && mv front/deployment.tmp.yaml front/deployment.yaml\n")))),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Note the ",(0,a.kt)("inlineCode",{parentName:"p"},"BASE_URL")," environment variable value here. In this case, we will use ",(0,a.kt)("inlineCode",{parentName:"p"},"/api")," as the base URL. This address will be defined in the ingress in a future step."))),(0,a.kt)("h2",{id:"create-the-service"},"Create the service"),(0,a.kt)("p",null,"Just like the backend, the frontend will need a service. In a file called ",(0,a.kt)("inlineCode",{parentName:"p"},"/front/service.yaml"),", add the following."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Service\nmetadata:\n  name: mern-k8s-front\n  labels:\n    app: mern-k8s\n    component: front\nspec:\n  selector:\n    component: front\n  ports:\n    - port: 80\n      targetPort: 80\n      protocol: TCP\n      name: http\n")),(0,a.kt)("p",null,"This service follows the same structure as the backend service."),(0,a.kt)("h2",{id:"apply-the-deployment-and-service"},"Apply the deployment and service"),(0,a.kt)("p",null,"You are now ready to apply those two new files to your cluster."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f ./front\n")),(0,a.kt)("p",null,"Now, take a look at everything you have in your cluster."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get all\n")),(0,a.kt)("p",null,"You should now see the two services, the newly added deployment and replicaset, and a total of four pods."))}u.isMDXComponent=!0}}]);