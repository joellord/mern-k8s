"use strict";(self.webpackChunkmdbw_atlas_operator=self.webpackChunkmdbw_atlas_operator||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Workshop Intro","href":"/mern-k8s/docs/intro","docId":"intro"},{"type":"link","label":"Personalization (optional)","href":"/mern-k8s/docs/personalization","docId":"personalization"},{"type":"category","label":"Environment setup","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Set up Minikube","href":"/mern-k8s/docs/environment-setup/minikube","docId":"environment-setup/minikube"}],"href":"/mern-k8s/docs/category/environment-setup"},{"type":"category","label":"MERN Stack and local app","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is the MERN Stack","href":"/mern-k8s/docs/mern-stack/intro","docId":"mern-stack/intro"},{"type":"link","label":"Explore the application","href":"/mern-k8s/docs/mern-stack/explore","docId":"mern-stack/explore"},{"type":"link","label":"Start a local database","href":"/mern-k8s/docs/mern-stack/start-database","docId":"mern-stack/start-database"},{"type":"link","label":"Start the backend","href":"/mern-k8s/docs/mern-stack/start-backend","docId":"mern-stack/start-backend"},{"type":"link","label":"Start the frontend","href":"/mern-k8s/docs/mern-stack/start-frontend","docId":"mern-stack/start-frontend"}],"href":"/mern-k8s/docs/category/mern-stack-and-local-app"},{"type":"category","label":"Containerize that app","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What are containers?","href":"/mern-k8s/docs/containerization/intro","docId":"containerization/intro"},{"type":"link","label":"Containerize the backend","href":"/mern-k8s/docs/containerization/backend","docId":"containerization/backend"},{"type":"link","label":"Create a network","href":"/mern-k8s/docs/containerization/network","docId":"containerization/network"},{"type":"link","label":"Containerize the frontend","href":"/mern-k8s/docs/containerization/frontend","docId":"containerization/frontend"},{"type":"link","label":"Package with Docker Compose (optional)","href":"/mern-k8s/docs/containerization/docker-compose","docId":"containerization/docker-compose"}],"href":"/mern-k8s/docs/category/containerize-that-app"},{"type":"category","label":"Migrate to Cloud database","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is MongoDB Atlas","href":"/mern-k8s/docs/migrate-to-cloud/intro","docId":"migrate-to-cloud/intro"},{"type":"link","label":"Create a MongoDB Atlas cluster","href":"/mern-k8s/docs/migrate-to-cloud/setup-cluster","docId":"migrate-to-cloud/setup-cluster"},{"type":"link","label":"Set up the backend to use Atlas","href":"/mern-k8s/docs/migrate-to-cloud/setup-backend","docId":"migrate-to-cloud/setup-backend"},{"type":"link","label":"Revisit the docker compose file (optional)","href":"/mern-k8s/docs/migrate-to-cloud/simplified-docker-compose","docId":"migrate-to-cloud/simplified-docker-compose"}],"href":"/mern-k8s/docs/category/migrate-to-cloud-database"},{"type":"category","label":"Deploy to Kubernetes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is Kubernetes?","href":"/mern-k8s/docs/deploy-to-k8s/intro","docId":"deploy-to-k8s/intro"},{"type":"link","label":"Deploy the backend","href":"/mern-k8s/docs/deploy-to-k8s/deploy-backend","docId":"deploy-to-k8s/deploy-backend"},{"type":"link","label":"Create an ingress","href":"/mern-k8s/docs/deploy-to-k8s/create-ingress","docId":"deploy-to-k8s/create-ingress"},{"type":"link","label":"Deploy the frontend","href":"/mern-k8s/docs/deploy-to-k8s/deploy-frontend","docId":"deploy-to-k8s/deploy-frontend"},{"type":"link","label":"Set up the ingress for multiple services","href":"/mern-k8s/docs/deploy-to-k8s/setup-ingress","docId":"deploy-to-k8s/setup-ingress"},{"type":"link","label":"Deploying the database on Kubernetes","href":"/mern-k8s/docs/deploy-to-k8s/deploy-database","docId":"deploy-to-k8s/deploy-database"}],"href":"/mern-k8s/docs/category/deploy-to-kubernetes"},{"type":"category","label":"Introducing the Atlas Operator","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is the Atlas Operator","href":"/mern-k8s/docs/introducing-atlas-operator/intro","docId":"introducing-atlas-operator/intro"},{"type":"link","label":"Installing the Atlas Operator","href":"/mern-k8s/docs/introducing-atlas-operator/installing","docId":"introducing-atlas-operator/installing"},{"type":"link","label":"Create the necessary secrets","href":"/mern-k8s/docs/introducing-atlas-operator/create-secrets","docId":"introducing-atlas-operator/create-secrets"},{"type":"link","label":"Create and manage an Atlas deployment","href":"/mern-k8s/docs/introducing-atlas-operator/manage-atlas","docId":"introducing-atlas-operator/manage-atlas"},{"type":"link","label":"Configure the backend","href":"/mern-k8s/docs/introducing-atlas-operator/configure-backend","docId":"introducing-atlas-operator/configure-backend"}],"href":"/mern-k8s/docs/category/introducing-the-atlas-operator"},{"type":"link","label":"Summary","href":"/mern-k8s/docs/conclusion","docId":"conclusion"}]},"docs":{"conclusion":{"id":"conclusion","title":"Summary","description":"You now know how to deploy a three tier application to Kubernetes. You\'ve seen how to create containers, deploy those into a Kubernetes cluster, and how to leverage the MongoDB Atlas Operator to create and manage clusters from Kubernetes.","sidebar":"tutorialSidebar"},"containerization/backend":{"id":"containerization/backend","title":"Containerize the backend","description":"It\'s now time to create your first container. Packaging a Node.js application is one of the simplest containers you can create, so it\'s a good place to start.","sidebar":"tutorialSidebar"},"containerization/docker-compose":{"id":"containerization/docker-compose","title":"Package with Docker Compose (optional)","description":"While using docker-compose is not required for this workshop, it\'s interesting to see how a Docker Compose setup could be used to share this application. As this is not the focus of this workshop, here is the yaml file to run it, and the associated commands.","sidebar":"tutorialSidebar"},"containerization/frontend":{"id":"containerization/frontend","title":"Containerize the frontend","description":"The backend is now running inside its own container. It\'s now time to build a container for the frontend.","sidebar":"tutorialSidebar"},"containerization/intro":{"id":"containerization/intro","title":"What are containers?","description":"Containers have existed since the 1970\'s in Unix-based operating systems. They were popularized by Docker when they released the Docker runtime in 2013. Since then, more and more developers have been using containers as part of their development process, as well as to deploy applications in a reliable way.","sidebar":"tutorialSidebar"},"containerization/network":{"id":"containerization/network","title":"Create a network","description":"In order for the containers to find each other, you will need to create a Docker network. Understanding how networking work in the containers land is out of the scope of this specific workshop. However, let\'s see how we can get our backend to connect to the MongoDB container.","sidebar":"tutorialSidebar"},"deploy-to-k8s/create-ingress":{"id":"deploy-to-k8s/create-ingress","title":"Create an ingress","description":"You now have two pods running your backend service, but they aren\'t accessible from the outside of the cluster. In order for the frontend to connect to it, they will need to be exposed. This is where the ingress will come into play.","sidebar":"tutorialSidebar"},"deploy-to-k8s/deploy-backend":{"id":"deploy-to-k8s/deploy-backend","title":"Deploy the backend","description":"As we did with the containers, we will start with the backend. The deployment will create two replicas of our backend.","sidebar":"tutorialSidebar"},"deploy-to-k8s/deploy-database":{"id":"deploy-to-k8s/deploy-database","title":"Deploying the database on Kubernetes","description":"Deploying a database on Kubernetes is no simple task. You will need to add persistence, as well as ensuring that you have redundancy. And as your application grows, you might need to add sharding and more replication. Perhaps you will need to move data to specific geolocated servers to comply with GDPR policies.","sidebar":"tutorialSidebar"},"deploy-to-k8s/deploy-frontend":{"id":"deploy-to-k8s/deploy-frontend","title":"Deploy the frontend","description":"The process to deploy the frontend is very similar to the backend. The two setups being almost identical.","sidebar":"tutorialSidebar"},"deploy-to-k8s/intro":{"id":"deploy-to-k8s/intro","title":"What is Kubernetes?","description":"Kubernetes is a container orchestration platform that can be used to manage containers in the cloud. It is commonly used in microservices architectures to ensure that all the containers are running at any given time, and that the network communication across various containers is taken care of.","sidebar":"tutorialSidebar"},"deploy-to-k8s/setup-ingress":{"id":"deploy-to-k8s/setup-ingress","title":"Set up the ingress for multiple services","description":"At the moment, the ingress is only configured to access the backend. The ingress can support multiple rules to redirect the traffic. In this example, we will use rules based on the request path to redirect the traffic to either the frontend or the backend.","sidebar":"tutorialSidebar"},"environment-setup/minikube":{"id":"environment-setup/minikube","title":"Set up Minikube","description":"The instructions for this workshop should work for any Kubernetes cluster. However, for simplicity and consistency, Minikube will be used during this workshop.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Workshop Intro","description":"Welcome to the Atlas Operator Workshop!","sidebar":"tutorialSidebar"},"introducing-atlas-operator/configure-backend":{"id":"introducing-atlas-operator/configure-backend","title":"Configure the backend","description":"Now that your project and cluster are created, you can access the various properties from your Atlas instance. You can now access the connection string, and even configure your backend service to use that connection string.","sidebar":"tutorialSidebar"},"introducing-atlas-operator/create-secrets":{"id":"introducing-atlas-operator/create-secrets","title":"Create the necessary secrets","description":"In order for the operator to be able to manage your cluster, you will need to provide it with an API key with the appropriate permissions.","sidebar":"tutorialSidebar"},"introducing-atlas-operator/installing":{"id":"introducing-atlas-operator/installing","title":"Installing the Atlas Operator","description":"The first step is to install the Atlas Operator. All of the source code for the operator can be found on the Github repository.","sidebar":"tutorialSidebar"},"introducing-atlas-operator/intro":{"id":"introducing-atlas-operator/intro","title":"What is the Atlas Operator","description":"Deploying a database in Kubernetes is a complex task. It requires a lot of expertise to ensure that your deployment is future proof. In addition to that, maintaining that database can also be complex. Upgrading to more recent versions while keeping the same data can be a big issue.","sidebar":"tutorialSidebar"},"introducing-atlas-operator/manage-atlas":{"id":"introducing-atlas-operator/manage-atlas","title":"Create and manage an Atlas deployment","description":"You are now ready to manage your Atlas projects and clusters from Kubernetes. This can be done with the three new CRDs that were added to your cluster. Those CRDs are AtlasProject to manage projects, AtlasDeployment to manage deployments, and AtlasDatabaseUser to manage database users.","sidebar":"tutorialSidebar"},"mern-stack/explore":{"id":"mern-stack/explore","title":"Explore the application","description":"For the purpose of this workshop, the most simplest possible application is used to demonstrate the MERN stack. The easiest use case would be a back-end with a route to write a new database entry, and another route to retrieve all entries.","sidebar":"tutorialSidebar"},"mern-stack/intro":{"id":"mern-stack/intro","title":"What is the MERN Stack","description":"The MERN stack is a technology stack commonly used to build JavaScript applications. It uses a MongoDB database, the Express framework for the back-end, the React framework on the front-end, and the server is powered by the Node.js runtime.","sidebar":"tutorialSidebar"},"mern-stack/start-backend":{"id":"mern-stack/start-backend","title":"Start the backend","description":"The first step to run everything locally is to start the back-end server.","sidebar":"tutorialSidebar"},"mern-stack/start-database":{"id":"mern-stack/start-database","title":"Start a local database","description":"The recommended way to run MongoDB nowadays is by using MongoDB Atlas, the cloud offering by MongoDB. It is much easier to manage clusters through Atlas. However, in some cases, developers like to have a local instance of MongoDB running as part of their environment. This can be easier to avoid data corruption, or to enable fully offline development environments.","sidebar":"tutorialSidebar"},"mern-stack/start-frontend":{"id":"mern-stack/start-frontend","title":"Start the frontend","description":"Now that you\'ve got a database and a backend, it\'s time to start the frontend to interact with those other components in a much friendlier way.","sidebar":"tutorialSidebar"},"migrate-to-cloud/intro":{"id":"migrate-to-cloud/intro","title":"What is MongoDB Atlas","description":"So far, the focus has been on local setup. The containers were all running locally, and it was easy to use. However, there will come a point where you will most likely want to connect to a database that is shared with your colleagues. Or you will most likely want to connect to a reliable, scalable, and resilient database once you launch your application into production. This is where MongoDB Atlas will come into play.","sidebar":"tutorialSidebar"},"migrate-to-cloud/setup-backend":{"id":"migrate-to-cloud/setup-backend","title":"Set up the backend to use Atlas","description":"Now\'s the time to change your application to use the cloud database rather than the local container version. The process is fairly straightforward since the application uses an environment variable to specify the connection string.","sidebar":"tutorialSidebar"},"migrate-to-cloud/setup-cluster":{"id":"migrate-to-cloud/setup-cluster","title":"Create a MongoDB Atlas cluster","description":"Once you are logged into your account, follow the steps from the documentation to create your free cluster. Once your cluster is up and running, you will be able to create your entites collection needed for your backend.","sidebar":"tutorialSidebar"},"migrate-to-cloud/simplified-docker-compose":{"id":"migrate-to-cloud/simplified-docker-compose","title":"Revisit the docker compose file (optional)","description":"If you created a Docker Compose setup earlier, and want to tweak it to use the new cloud database, you can use the following yaml.","sidebar":"tutorialSidebar"},"personalization":{"id":"personalization","title":"Personalization (optional)","description":"You can personalize the commands to be used in future steps of the documentation by filling in these variables.","sidebar":"tutorialSidebar"}}}')}}]);